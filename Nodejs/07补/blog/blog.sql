/*
Navicat MySQL Data Transfer

Source Server         : 本地的服务器
Source Server Version : 50520
Source Host           : localhost:3306
Source Database       : blog

Target Server Type    : MYSQL
Target Server Version : 50520
File Encoding         : 65001

Date: 2017-03-16 14:28:34
*/

SET FOREIGN_KEY_CHECKS=0;

-- ----------------------------
-- Table structure for posts
-- ----------------------------
DROP TABLE IF EXISTS `posts`;
CREATE TABLE `posts` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(255) NOT NULL,
  `brief` varchar(255) NOT NULL,
  `content` text NOT NULL,
  `author` char(60) NOT NULL,
  `update_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=16 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of posts
-- ----------------------------
INSERT INTO `posts` VALUES ('1', 'vConsole ——开源的前端 console 调试面板', '兄弟团队开发了一个针对手机网页的前端 console 调试面板，并将其开源了，一个非常有用的开发调试工具。 项目地址： https://github.com/WechatFE/vConsole 。 不多介绍，以下内容直接 copy 了项目的 README.md 简介 vCon', '<p>兄弟团队开发了一个针对手机网页的前端 console 调试面板，并将其开源了，一个非常有用的开发调试工具。&nbsp;<br />\r\n项目地址：&nbsp;<a href=\"https://github.com/WechatFE/vConsole\">https://github.com/WechatFE/vConsole</a>&nbsp;。</p>\r\n\r\n<p>不多介绍，以下内容直接 copy 了项目的 README.md</p>\r\n\r\n<hr />\r\n<h3>简介</h3>\r\n\r\n<p>vConsole 是一个网页前端调试面板，专为手机 web 页面量身设计，帮助开发者更为便捷地进行开发调试工作。</p>\r\n\r\n<h3>手机预览</h3>\r\n\r\n<p><img alt=\"\" src=\"https://www.qianduan.net/content/images/2016/04/vconsole_qr.png\" /></p>\r\n\r\n<p><a href=\"http://wechatfe.github.io/vconsole/demo.html\">http://wechatfe.github.io/vconsole/demo.html</a></p>\r\n\r\n<p><img alt=\"\" src=\"https://www.qianduan.net/content/images/2016/04/log_panel.png\" /></p>\r\n\r\n<h3>使用方法</h3>\r\n\r\n<p>1.下载模块</p>\r\n\r\n<p>checkout 文件&nbsp;<code>dist/vconsole.min.js</code>&nbsp;到本地。</p>\r\n\r\n<p>2.引入模块</p>\r\n\r\n<p>(1) 如果未使用 AMD/CMD 规范，可直接在 HTML 中引入 vConsole 模块：</p>\r\n\r\n<pre>\r\n<code>&lt;script src=&quot;path/to/vconsole.min.js&quot;&gt;&lt;/script&gt;  \r\n</code></pre>\r\n\r\n<p>(2) 如果使用了 AMD/CMD 规范，可在 module 内使用&nbsp;<code>require()</code>&nbsp;引入模块：</p>\r\n\r\n<pre>\r\n<code>var vConsole = require(&#39;path/to/vconsole.min.js&#39;);  \r\n</code></pre>\r\n\r\n<p>3.打印 log 日志</p>\r\n\r\n<p>(1) 与 PC 端打印 log 一致，可直接使用&nbsp;<code>console.log()</code>&nbsp;等方法直接打印日志：</p>\r\n\r\n<pre>\r\n<code>console.log(&#39;Hello World&#39;);  \r\n</code></pre>\r\n\r\n<p>未加载 vConsole 模块时，<code>console.log()</code>&nbsp;会直接打印到原生控制台中；加载 vConsole 后，日志会打印到页面前端+原生控制台。</p>\r\n\r\n<p>(2) 支持 4 种不同类型的日志，会以不同的颜色输出到前端面板：</p>\r\n\r\n<pre>\r\n<code>console.log(&#39;foo&#39;); // 白底黑字  \r\nconsole.info(&#39;bar&#39;); // 白底紫字  \r\nconsole.debug(&#39;oh&#39;); // 白底黄字  \r\nconsole.warn(&#39;foo&#39;); // 黄底黄字  \r\nconsole.error(&#39;bar&#39;); // 红底红字  \r\n</code></pre>\r\n\r\n<p>(3) 支持打印 Object 对象，会以 JSON 字符串格式输出：</p>\r\n\r\n<pre>\r\n<code>var obj = {};  \r\nobj.foo = &#39;bar&#39;;  \r\nconsole.log(obj); // 打印出 {foo: &#39;bar&#39;}  \r\n</code></pre>\r\n\r\n<p>(4) 支持传入多个参数，会以空格隔开：</p>\r\n\r\n<pre>\r\n<code>var uid = 233;  \r\nconsole.log(&#39;UserID:&#39;, uid); // 打印出 UserID: 233  \r\n</code></pre>\r\n\r\n<p>(5) 引入模块后，vConsole 会有一段很小的延迟来用于初始化工作。此时若需打印日志，请使用&nbsp;<code>vConsole.ready()</code>&nbsp;方法：</p>\r\n\r\n<pre>\r\n<code>// 若未通过 AMD/CMD 方式加载模块，\r\n// vConsole 会自动挂载在全局 window 对象中，即 window.vConsole\r\nvConsole.ready(function() {  \r\n    console.log(&#39;Hello World&#39;);\r\n});\r\n</code></pre>\r\n\r\n<h3>注意事项</h3>\r\n\r\n<p>引入 vConsole 模块后，页面前端将会在右下角出现 vConsole 的悬停按钮，可展开/收起面板。</p>\r\n\r\n<p>若不希望普通用户看到面板，请不要在生产环境中引入 vConsole 模块。动态引入模块的方法可参考&nbsp;<code>example/demo2.php</code>&nbsp;示例。</p>\r\n', 'web', '2017-03-16 11:43:09');
INSERT INTO `posts` VALUES ('5', 'WeUI for 微信小程序发布', '嗯，迟到的软文，这几天博客后台遇到了点儿问题，今天午休折腾了一番，也没有折腾对，但博客就这样恢复了。node nginx chrome spdy http/2 ...ghost 每次升级都各种蛋疼，前端技术这些年越来越牛逼了啊，每天不是折腾轮子就是被轮子折腾。。。 废话少说，赶紧', '<p>嗯，迟到的软文，这几天博客后台遇到了点儿问题，今天午休折腾了一番，也没有折腾对，但博客就这样恢复了。node nginx chrome spdy http/2 ...ghost 每次升级都各种蛋疼，前端技术这些年越来越牛逼了啊，每天不是折腾轮子就是被轮子折腾。。。</p>\r\n\r\n<p>废话少说，赶紧把软文发了，不然。。。</p>\r\n\r\n<hr />\r\n<p>项目地址：&nbsp;<a href=\"https://github.com/weui/weui-wxss\">https://github.com/weui/weui-wxss</a>&nbsp;<br />\r\n以下内容 copy 自项目的 README //懒癌患者。。。</p>\r\n\r\n<h2>概述</h2>\r\n\r\n<p><a href=\"https://github.com/weui/weui\">WeUI</a>&nbsp;是一套同微信原生视觉体验一致的基础样式库，由微信官方设计团队为微信内网页和微信小程序量身设计，令用户的使用感知更加统一。包含<code>button</code>、<code>cell</code>、<code>dialog</code>、&nbsp;<code>progress</code>、&nbsp;<code>toast</code>、<code>article</code>、<code>actionsheet</code>、<code>icon</code>等各式元素。</p>\r\n\r\n<h2>预览</h2>\r\n\r\n<p>用<a href=\"https://mp.weixin.qq.com/debug/wxadoc/dev/devtools/download.html\">微信web开发者工具</a>打开<code>dist</code>目录（请注意，是dist目录，不是整个项目）</p>\r\n\r\n<p><img alt=\"preview\" src=\"https://cloud.githubusercontent.com/assets/2395166/20168869/48a75b02-a75f-11e6-89aa-503d65c8ad8e.png\" style=\"width:320px\" /></p>\r\n\r\n<h2>使用</h2>\r\n\r\n<ul>\r\n	<li>组件的wxml结构请看<code>dist/example/</code>下的组件</li>\r\n	<li>样式文件可直接引用<code>dist/style/weui.wxss</code>，或者单独引用<code>dist/style/widget</code>下的组件的<code>wxss</code></li>\r\n</ul>\r\n\r\n<h2>文档</h2>\r\n\r\n<p>WeUI 视觉标准参考&nbsp;<a href=\"https://github.com/weui/weui-design\">weui-design</a></p>\r\n\r\n<h2>License</h2>\r\n\r\n<p>The MIT License(<a href=\"http://opensource.org/licenses/MIT\">http://opensource.org/licenses/MIT</a>)</p>\r\n\r\n<p>请自由地享受和参与开源</p>\r\n\r\n<h2>贡献</h2>\r\n\r\n<p>如果你有好的意见或建议，欢迎给我们提issue或pull request。</p>\r\n', 'web', '2017-03-16 09:43:21');
INSERT INTO `posts` VALUES ('6', 'WeUI 1.0发布', 'WeUI 是一套同微信原生视觉体验一致的基础样式库，由微信官方设计团队为微信内网页和微信小程序量身设计，令用户的使用感知更加统一。 经过半年的打磨，WeUI 1.0 正式发布，主要是新增了一些常用组件，并使用 BEM 命名，为接下来的微信小程序开发做好准备。 主要features', '<p>WeUI 是一套同微信原生视觉体验一致的基础样式库，由微信官方设计团队为微信内网页和微信小程序量身设计，令用户的使用感知更加统一。</p>\r\n\r\n<p>经过半年的打磨，WeUI 1.0 正式发布，主要是新增了一些常用组件，并使用 BEM 命名，为接下来的微信小程序开发做好准备。</p>\r\n\r\n<h3>主要features</h3>\r\n\r\n<ul>\r\n	<li>【增强】 采用BEM命名规范</li>\r\n	<li>【增强】 新增Flex布局</li>\r\n	<li>【增强】 新增Gallery</li>\r\n	<li>【增强】 新增Preview</li>\r\n	<li>【增强】 新增Agreement</li>\r\n	<li>【增强】 新增Footer</li>\r\n	<li>【增强】 新增Dialog和Actionsheet的Android样式</li>\r\n	<li>【修复】 修正了部分组件的间距</li>\r\n	<li>【修复】 修复了已知问题</li>\r\n</ul>\r\n\r\n<p>项目地址：<a href=\"https://github.com/weui/weui\">https://github.com/weui/weui</a>&nbsp;<br />\r\n预览地址：<a href=\"https://weui.io/\">https://weui.io/</a></p>\r\n', 'web', '2017-03-16 09:45:03');
INSERT INTO `posts` VALUES ('7', 'iOS 10 明天发布，你怕了吗？', '3个月前，我汇总了 iOS 10 中 Safari 的新特性，输出为《Safari 10 越来越像理想中的浏览器了》，嗯，Safari 10 对前端的支持确实令人欣慰。然而，还有一个非常重要的事情需要关注： iOS 10 要求 app 必须启用ATS ATS(App Transp', '<p>3个月前，我汇总了 iOS 10 中 Safari 的新特性，输出为《<a href=\"https://www.qianduan.net/safari-10-almost-perfect/\">Safari 10 越来越像理想中的浏览器了</a>》，嗯，Safari 10 对前端的支持确实令人欣慰。然而，还有一个非常重要的事情需要关注：</p>\r\n\r\n<h1>iOS 10 要求 app 必须启用ATS</h1>\r\n\r\n<p>ATS(App Transport Security)是苹果在 iOS 9/OS X 10.11 中开始引入的特性，旨在提高 app 的安全性，要求 app 的 HTTP 通信必须是加密的，而且还要求 HTTS 连接建立在 TLS 1.2 协议以上 (嗯，TLS 1.2 是目前最新的版本，它于 2008 年发布，在 2011 年发布了修正版，TLS 1.3目前还在草案中)</p>\r\n\r\n<p>其实在 iOS 9 的时候，苹果就要求启用ATS了，但当时还可以用&nbsp;<code>NSAllowsArbitraryLoads</code>&nbsp;来避开从而让 app 可以继续访问 HTTP&nbsp;<strong>网站，而从 2017 年 1 月 1 日开始，苹果开始禁用这项配置！也就是说，从此以后新提交的 APP ，只能访问 HTTPS 网络内容</strong></p>\r\n\r\n<p>而 Safari 10 作为 iOS 10 内置的官方 app，显然是要首当其冲的了，目测 Safari 10 依然可以访问非 HTTPS 的网站，但已经<strong>不能</strong>获取一些用户隐私的数据了，比如<strong>地理位置</strong>&nbsp;，而且不太确定什么时候会禁用对非 HTTPS 的访问。</p>\r\n\r\n<p>还有，在 2017 年 1 月 1 日前，不确定非浏览器类 app 启用&nbsp;<code>NSAllowsArbitraryLoads</code>&nbsp;后是否还能通过审核，反正之后是肯定不行了吧。</p>\r\n\r\n<p>所以可能有一天，微信或者 QQ 或者微博，在 iPhone 上，就不能访问非 HTTPS 的网站了。</p>\r\n\r\n<p>另外，Chrome 桌面版已经开始限制非 HTTPS 网站的权限了，比如，从 Chrome 51 版本开始，非 HTTPS 网站就不能再获取用户的地理位置了，而从 Chrome 53 开始，会提示非 HTTPS 网站可能不安全。</p>\r\n\r\n<p>所以，面对即将到来的限制非 HTTPS 大潮，你怕了吗？</p>\r\n\r\n<p>快快部署 HTTP/2 吧！</p>\r\n', 'web', '2017-03-16 09:45:39');
INSERT INTO `posts` VALUES ('8', 'iPhone Safari 下 input disabled 颜色', '最近在项目中遇到需要修改 input 的 disabled 状态的颜色的情况，然而无论如何都不成功，折腾了好久。后来发现还是 User Agent 样式的问题。 iPhone Safari/webview input disabled 的默认样式： input:disable', '<p>最近在项目中遇到需要修改&nbsp;<code>input</code>&nbsp;的&nbsp;<code>disabled</code>&nbsp;状态的颜色的情况，然而无论如何都不成功，折腾了好久。后来发现还是 User Agent 样式的问题。</p>\r\n\r\n<p>iPhone Safari/webview input disabled 的默认样式：</p>\r\n\r\n<pre>\r\n<code>input:disabled{  \r\n    opacity: 0.4\r\n}\r\n</code></pre>\r\n\r\n<p>嗯，开发者工具只能看到这一条。 即便是 reset 为&nbsp;<code>opacity : 1</code>&nbsp;也无效。因为还有一条隐藏的样式&nbsp;<code>-webkit-text-fill-color</code>&nbsp;，于是有效的样式为 ：</p>\r\n\r\n<pre>\r\n<code>input:disabled{  \r\n    color:@disabledColor;\r\n    opacity: 1;\r\n    -webkit-text-fill-color: @disabledColor;\r\n}</code></pre>\r\n', 'web', '2017-03-16 09:46:18');
INSERT INTO `posts` VALUES ('9', 'X5 对web标准支持速查表', '移动端web开发最头痛的还是浏览器支持。好在 X5 自己整理了各个版本对 web 标准的支持情况的速查表，类似 caniuse 由于会不断更新，这里就不再截图了，想要了解的自己去看吧： 个版本对比： http://res.imtt.qq.com/tbs/incoming201', '<p>移动端web开发最头痛的还是浏览器支持。好在 X5 自己整理了各个版本对 web 标准的支持情况的速查表，类似 caniuse</p>\r\n\r\n<p>由于会不断更新，这里就不再截图了，想要了解的自己去看吧：</p>\r\n\r\n<p>个版本对比：&nbsp;<br />\r\n<a href=\"http://res.imtt.qq.com/tbs/incoming20160607/home.html\">http://res.imtt.qq.com/tbs/incoming20160607/home.html</a></p>\r\n\r\n<p>HTML5 支持&nbsp;<br />\r\n<a href=\"http://res.imtt.qq.com/qqbrowser_x5/h5/features.htm\">http://res.imtt.qq.com/qqbrowser_x5/h5/features.htm</a></p>\r\n\r\n<p><a href=\"https://www.qianduan.net/author/shenfei/\">神飞</a></p>\r\n', 'web', '2017-03-16 09:46:57');
INSERT INTO `posts` VALUES ('10', 'Ghost theme swiftnote 发布', '最近开始学 swift ，就想要把遇到的问题给记下来，以备以后查阅，毕竟年纪大了，脑袋瓜不好使了。 后来就想不如索性搞个博客吧，虽然现在博客已经不流行了，自己记录和查找方便就行。关键是，Ghost 出了个客户端 Ghost Desktop，配合起来也是非常方便——虽然类似博客时代', '<p>最近开始学 swift ，就想要把遇到的问题给记下来，以备以后查阅，毕竟年纪大了，脑袋瓜不好使了。</p>\r\n\r\n<p>后来就想不如索性搞个博客吧，虽然现在博客已经不流行了，自己记录和查找方便就行。关键是，Ghost 出了个客户端 Ghost Desktop，配合起来也是非常方便&mdash;&mdash;虽然类似博客时代的各种客户端，但Ghost对我的最大诱惑是markdown呀。</p>\r\n\r\n<p>预览：&nbsp;<a href=\"https://www.swiftnote.io/\">https://www.swiftnote.io</a></p>\r\n\r\n<p>Github：<a href=\"https://github.com/qianduan/swiftnote\">https://github.com/qianduan/swiftnote</a></p>\r\n\r\n<p><img alt=\"\" src=\"https://www.qianduan.net/content/images/2016/06/swiftnote.png\" /></p>\r\n\r\n<p><img alt=\"\" src=\"https://www.qianduan.net/content/images/2016/06/swiftnote-app.png\" /><img alt=\"\" src=\"https://www.qianduan.net/content/images/2016/06/swiftnote-404.png\" /></p>\r\n', 'web', '2017-03-16 09:47:34');
INSERT INTO `posts` VALUES ('11', 'weFlow 一个前端开发工作流GUI工具', '兄弟部门开发的一个工作流工具，终于发布了。 推荐一下， 这个工具是由大猫领导，littledu 和 hzlzh 主导的自动化打包和发布工具。 不多介绍，感兴趣自己去看吧，项目主页：http://weflow.io/', '<p>兄弟部门开发的一个工作流工具，终于发布了。</p>\r\n\r\n<p>推荐一下， 这个工具是由<a href=\"http://ooxx.me/\">大猫</a>领导，<a href=\"https://github.com/littledu\">littledu</a>&nbsp;和&nbsp;<a href=\"http://hzlzh.io/\">hzlzh</a>&nbsp;主导的自动化打包和发布工具。</p>\r\n\r\n<p>不多介绍，感兴趣自己去看吧，项目主页：<a href=\"http://weflow.io/\">http://weflow.io/</a></p>\r\n\r\n<p><img alt=\"\" src=\"https://www.qianduan.net/content/images/2016/06/screenshot-2x-1.png\" /></p>\r\n', 'web', '2017-03-16 09:48:06');
INSERT INTO `posts` VALUES ('12', 'Safari 10 越来越像理想中的浏览器了', 'Safari 10的技术规格出来了，嗯，简直激动人心。 这里简单『搬运』一下官方的文章 Web APIs IndexedDB 完整支持W3C推荐规范了 复制和剪切 可以用Javascript来复制和剪切内容了，方法： document.execCommand(\'copy\')', '<p>Safari 10的技术规格出来了，嗯，简直激动人心。</p>\r\n\r\n<p>这里简单『搬运』一下<a href=\"https://developer.apple.com/library/prerelease/content/releasenotes/General/WhatsNewInSafari/Articles/Safari_10_0.html\">官方</a>的文章</p>\r\n\r\n<h2>Web APIs</h2>\r\n\r\n<ul>\r\n	<li>IndexedDB&nbsp;<br />\r\n	完整支持<a href=\"http://www.w3.org/TR/IndexedDB/\">W3C推荐规范</a>了</li>\r\n	<li>复制和剪切&nbsp;<br />\r\n	可以用Javascript来复制和剪切内容了，方法：&nbsp;<code>document.execCommand(&#39;copy&#39;)</code>&nbsp;<code>document.execCommand(&#39;cut&#39;)</code></li>\r\n	<li>CSP 2.0&nbsp;<br />\r\n	CSP (Content Security Policy 内容安全策略)支持&nbsp;<a href=\"http://www.w3.org/TR/CSP2/\">2.0 标准</a>了</li>\r\n	<li>Shadow DOM&nbsp;<br />\r\n	终于支持了呀，Chrome在几年前就支持了，这样的话，iOS上也可以放心搞 web components 了</li>\r\n	<li>ES 6&nbsp;<br />\r\n	嗯，Safari 支持&nbsp;<a href=\"http://www.ecma-international.org/ecma-262/6.0/index.html\">ECMAScript 2015</a>&nbsp;标准，也就是 ES 6 ，完全支持，史上第一个完全支持 ES 6 的浏览器</li>\r\n	<li>ES 国际化&nbsp;<br />\r\n	集成&nbsp;<a href=\"http://www.ecma-international.org/publications/standards/Ecma-402.htm\">ECMAScript Internationalization API</a>&nbsp;标准，也就是 ECMA-402，支持客户端数字、币种、时间格式等</li>\r\n	<li>DOM 兼容性增强&nbsp;<br />\r\n	这个没啥说的</li>\r\n	<li>3D Touch 事件&nbsp;<br />\r\n	对于 3D Touch，iOS 是&nbsp;<code>touchforcechange</code>, macOS 是&nbsp;<code>webkitmouseforcechange</code>，只有用力按下时触发。&nbsp;<code>touch</code>对象的&nbsp;<code>force</code>&nbsp;属性值的区间为从&nbsp;<code>0.0</code>&nbsp;到&nbsp;<code>1.0</code></li>\r\n	<li>WebGL&nbsp;\r\n	<ul>\r\n		<li>iOS 支持情景创建参数&nbsp;<code>antialias</code>&nbsp;默认值为&nbsp;<code>true</code></li>\r\n		<li>iOS 支持情景创建参数&nbsp;<code>alpha</code>，默认值为&nbsp;<code>false</code></li>\r\n		<li>一个页面上的活动 WebGL 情景数量限制为 16，超出后，新创建情景会将最旧的销毁</li>\r\n	</ul>\r\n	</li>\r\n</ul>\r\n\r\n<h2>媒体</h2>\r\n\r\n<ul>\r\n	<li>iOS 内联视频\r\n	<ul>\r\n		<li>设定<code>webkit-playsinline</code>属性后，iPhone Safari会允许视频在页面内播放，没有设置该属性时，点击播放依然会全屏，但用户缩小(双指动作)时，也会内联播放</li>\r\n		<li>在 iOS 中，如果视频没有音轨或者禁用了音轨，可以在页面加载时自动播放了</li>\r\n	</ul>\r\n	</li>\r\n	<li>macOS 画中画\r\n	<ul>\r\n		<li>Safari 10 支持画中画功能</li>\r\n		<li>Safari 默认的 HTML5 视频控制条在画中画中有一个独立的样式</li>\r\n		<li>如果想要自定义画中画的播放控制条，可以用 Javascript 演讲模式 API</li>\r\n	</ul>\r\n	</li>\r\n</ul>\r\n\r\n<h2>文本特性</h2>\r\n\r\n<ul>\r\n	<li>支持 WOFF 2.0，WOFF 2.0改进了字体的压缩效率</li>\r\n	<li>可以使用&nbsp;<a href=\"https://drafts.csswg.org/css-font-loading/\">CSS Font Loading Module Level 3 specification</a>规范来从脚本创建和加载字体并跟踪字体的状态</li>\r\n	<li>只有要渲染的文本的文字在字体的&nbsp;<a href=\"https://drafts.csswg.org/css-fonts-3/#unicode-range-desc\">Unicode range</a>&nbsp;之内，网络字体才会被下载。</li>\r\n</ul>\r\n\r\n<h2>排版与渲染</h2>\r\n\r\n<ul>\r\n	<li>CSS 支持&nbsp;<code>object-position</code>&nbsp;<br />\r\n	吼，终于支持了，之前只支持<code>object-fit</code>，正好前几天写了一篇&nbsp;<a href=\"https://www.qianduan.net/object-fit-object-position/\">object-fit: 炒鸡方便的图片居中方法</a></li>\r\n	<li>支持使用 SVG 路径剪切&nbsp;<br />\r\n	你可以剪切成复杂的图案，包括贝塞尔曲线路径和<code>evenodd</code>填充规则。使用&nbsp;<code>path()</code>&nbsp;图形，就像在&nbsp;<a href=\"https://drafts.csswg.org/css-shapes-2/#supported-basic-shapes\">CSS Shapes Level 2 specification</a>&nbsp;规范中定义的一样</li>\r\n	<li>支持 #RGBA 和 #RRGGBBAA&nbsp;<br />\r\n	支持 #RGBA 和 #RRGGBBAA 颜色值了</li>\r\n	<li><code>border-image</code>&nbsp;的新值&nbsp;<br />\r\n	<code>border-image</code>新增&nbsp;<code>round</code>&nbsp;和&nbsp;<code>space</code>&nbsp;值</li>\r\n	<li><code>image-rendering</code>&nbsp;的新值&nbsp;<br />\r\n	<code>image-rendering</code>&nbsp;新增两个值&nbsp;<code>crisp-edges</code>&nbsp;和&nbsp;<code>pixelated</code>&nbsp;，&nbsp;<code>-webkit-crisp-edges</code>&nbsp;和&nbsp;<code>-webkit-optimize-contrast</code>&nbsp;映射到&nbsp;<code>crisp-edges</code></li>\r\n	<li>支持&nbsp;<code>direction</code>&nbsp;属性&nbsp;<br />\r\n	so... 支持从右到左的语言了，滚动条的位置和表单控制会适配到</li>\r\n	<li>\r\n	<p>media query支持广色域</p>\r\n\r\n	<p><code>@media (color-gamut: p3) { &hellip; }</code></p>\r\n	</li>\r\n	<li>CSS 截断属性&nbsp;<br />\r\n	新增&nbsp;<code>break-before</code>、<code>break-inside</code>和<code>break-after</code></li>\r\n	<li>去前缀的属性&nbsp;<br />\r\n	以下几个属性支持不用&nbsp;<code>-webkit-</code>&nbsp;的前缀了\r\n	<ul>\r\n		<li>filter</li>\r\n		<li>cross-fade</li>\r\n		<li>image-rendering</li>\r\n	</ul>\r\n	</li>\r\n</ul>\r\n\r\n<h2>Web Inspector</h2>\r\n\r\n<ul>\r\n	<li>支持 WebDriver 自动化测试，不多介绍直接看文档吧：&nbsp;<a href=\"http://docs.seleniumhq.org/projects/webdriver/\">Selenium WebDriver</a></li>\r\n	<li>内存调试&nbsp;<br />\r\n	新的时间轴，可以显示页面的内存使用情况和基于时间的散点分布。这些新功能可以帮你定位和提高页面的内存性能</li>\r\n	<li>快速抽样分析&nbsp;<br />\r\n	呃，这个看不懂。。。直接贴原文：The new JavaScript profiler delivers fast performance by sampling running code at a high resolution while disabling debugging tools. It allows scripts to run at full JIT-accelerated (just-in-time compilation) speeds for accurate timeline recording.</li>\r\n</ul>\r\n\r\n<h2>原生 API</h2>\r\n\r\n<ul>\r\n	<li>Apple Pay&nbsp;<br />\r\n	直接看&nbsp;<a href=\"https://developer.apple.com/reference/applepayjs\">ApplePay JS Framework Reference</a>&nbsp;吧</li>\r\n	<li>WKWebView 的预览动作&nbsp;<br />\r\n	更新的&nbsp;<a href=\"https://developer.apple.com/reference/webkit/wkwebview\">WKWebView API</a>&nbsp;支持直接在一个自定义的视图控制器中预览一个链接。通过这个 API，你可以在你的 APP 内创建视图而不用弹出 Safari 了，而且你也可以自定义预览的动作。&nbsp;<a href=\"https://developer.apple.com/reference/webkit/wkuidelegate\">WKUIDelegate</a>&nbsp;相关的 Class 有：&nbsp;<a href=\"https://developer.apple.com/reference/webkit/wkuidelegate/1648359-webview\">webView:shouldPreviewElement:</a>&nbsp;、&nbsp;<a href=\"https://developer.apple.com/reference/webkit/wkuidelegate/1648361-webview\">webView:previewingViewControllerForElement:defaultActions:</a>&nbsp;以及&nbsp;<a href=\"https://developer.apple.com/reference/webkit/wkuidelegate/1648360-webview\">webView:commitPreviewingViewController:</a>.</li>\r\n	<li>WKWebView 的&nbsp;<code>allowsLinkPreview</code>&nbsp;属性在 iOS 10.0 以后默认为&nbsp;<code>YES</code></li>\r\n	<li>Safari 视图控制器&nbsp;<br />\r\n	iOS 中 Safari 视图控制器支持自定义颜色作为视图的工具栏背景。</li>\r\n	<li>WKWebView 的键盘显示行为&nbsp;<br />\r\n	在 iOS 10 中，当键盘被唤起时，&nbsp;<code>WKWebView</code>&nbsp;对象使用 Safari 原生的行为，会更新它的&nbsp;<code>window.innerHeight</code>&nbsp;属性，而不再调起&nbsp;<code>resize</code>&nbsp;事件。</li>\r\n</ul>\r\n\r\n<h2>Safari APP 扩展</h2>\r\n\r\n<p>感觉就是 Chrome Web Store 那一套了。具体看&nbsp;<a href=\"https://developer.apple.com/library/prerelease/content/documentation/NetworkingInternetWeb/Conceptual/SafariAppExtension_PG/index.html#//apple_ref/doc/uid/TP40017319\">Safari APP 扩展开发指南</a></p>\r\n', 'web', '2017-03-16 09:48:43');
INSERT INTO `posts` VALUES ('13', 'object-fit: 炒鸡方便的图片居中方法', '今天在项目中遇到图片居中的问题，嗯，之前也有写过解决这个问题的文章，有n种方法。不过今天要说一个新的方案：object-fit ，嗯，这个才是真的方便的方案啊。 先看预览： 查看详细demo object-fit 只能用于『可替换元素』(replaced element) 。所谓', '<p>今天在项目中遇到图片居中的问题，嗯，之前也有写过解决这个问题的文章，有n种方法。不过今天要说一个新的方案：<code>object-fit</code>&nbsp;，嗯，这个才是真的方便的方案啊。</p>\r\n\r\n<p>先看预览：</p>\r\n\r\n<p><img alt=\"\" src=\"https://www.qianduan.net/content/images/2016/05/object-fit.png\" /></p>\r\n\r\n<p><a href=\"http://labs.qianduan.net/object-fit.html\">查看详细demo</a></p>\r\n\r\n<p><code>object-fit</code>&nbsp;只能用于『可替换元素』(replaced element) 。所谓可替换元素，是指元素的内容和表现不是由CSS控制的，独立渲染的外部元素，比如：&nbsp;<code>img</code>、&nbsp;<code>object</code>、&nbsp;<code>video</code>&nbsp;和 表单元素，如<code>textarea</code>、&nbsp;<code>input</code>，<code>audio</code>&nbsp;和&nbsp;<code>canvas</code>在一些特殊情况下，也可以作为可替换元素。</p>\r\n\r\n<p>在使用&nbsp;<code>object-fit</code>&nbsp;时，一定要设定元素的size，也就是&nbsp;<code>width</code>&nbsp;和&nbsp;<code>height</code></p>\r\n\r\n<p>直入正题，<code>object-fit</code>&nbsp;有五个可选值，分别是：</p>\r\n\r\n<ul>\r\n	<li><code>fill</code>&nbsp;默认值。填充，可替换元素填满整个内容区域，可能会改变长宽比。</li>\r\n	<li><code>contain</code>&nbsp;包含，保持长宽比，保证可替换元素完整显示，长宽比和内容区域的长宽比不一致时，内容区域会出现空白。</li>\r\n	<li><code>cover</code>&nbsp;覆盖，保持长宽比，保证内容区域被填满，所以可替换元素可能会被切掉一部分，从而不能完整展示。</li>\r\n	<li><code>none</code>&nbsp;顾名思义，就是什么都没有啦，当然不是什么都没有啦，而且千万不要以为和<code>fill</code>是一样的！实际效果是，保持可替换元素原尺寸和比例。</li>\r\n	<li><code>scale-down</code>&nbsp;等比缩小。效果类似&nbsp;<code>contain</code>&nbsp;或&nbsp;<code>none</code></li>\r\n</ul>\r\n\r\n<p>用法也超级简单：</p>\r\n\r\n<pre>\r\n<code>.cover{\r\n    object-fit: cover;\r\n}\r\n.contain{\r\n    object-fit: contain;\r\n}\r\n.fill{\r\n    object-fit: fill;\r\n}\r\n.scale-down{\r\n    object-fit: scale-down;\r\n}\r\n</code></pre>\r\n\r\n<h3>one more thing</h3>\r\n\r\n<p>object-position</p>\r\n\r\n<p>当元素被&nbsp;<code>object-fit</code>&nbsp;裁切的时候，你一定想知道如何控制裁切的位置。 嗯，顾名思义，&nbsp;<code>object-position</code>&nbsp;就是为了解决这个问题的。</p>\r\n\r\n<p>不过，<code>object-position</code>&nbsp;不难理解，类似&nbsp;<code>background-position</code>，不多说了。</p>\r\n\r\n<h3>浏览器兼容性</h3>\r\n\r\n<ul>\r\n	<li>IE 全家不支持，包括最新的 EDGE</li>\r\n	<li>android 4.4.4+ 支持，Chrome 29+ 支持</li>\r\n	<li>Safari 7.1+ 和 iOS 8+ 支持&nbsp;<code>object-fit</code>，不支持<code>object-position</code></li>\r\n</ul>\r\n\r\n<hr />\r\n<p>囧~~，写完了才发现大神<a href=\"http://www.zhangxinxu.com/wordpress/2015/03/css3-object-position-object-fit/\">张鑫旭之前写过一篇</a>。。。</p>\r\n', 'web', '2017-03-16 09:49:22');
INSERT INTO `posts` VALUES ('14', 'user-select : 保护版权内容的简单方案', '有的适合我们需要保护我们页面的内容，为了版权或者安全等原因，这个适合我们可以使用 user-select 这个CSS属性，简单易用。 嗯，这个属性不麻烦，而且也不是 CSS 3 / CSS 4 的新属性，这里简单归纳一下： .control-select { user-', '<p>有的适合我们需要保护我们页面的内容，为了版权或者安全等原因，这个适合我们可以使用 user-select 这个CSS属性，简单易用。</p>\r\n\r\n<p>嗯，这个属性不麻烦，而且也不是 CSS 3 / CSS 4 的新属性，这里简单归纳一下：</p>\r\n\r\n<pre>\r\n<code> .control-select {\r\n    user-select: none; /* 禁止选择 */\r\n    user-select: auto; /* 浏览器来决定是否允许选择 */\r\n    user-select: all; /* 可以选择任何内容 */\r\n    user-select: text; /* 只能选择文本 */\r\n    user-select: contain; /* 选择绑定的元素以内的内容 */\r\n  }\r\n</code></pre>\r\n\r\n<p>不过，这个属性还并没有被各浏览器以标准的行为来实现，所以使用的适合还是要加上各种前缀：</p>\r\n\r\n<pre>\r\n<code>.no-select {\r\n  -moz-user-select: none; \r\n  -ms-user-select: none; \r\n  -webkit-user-select: none; \r\n}\r\n</code></pre>\r\n\r\n<p>注意： IE 9 才开始支持，IE 8 及更早期的版本不支持</p>\r\n\r\n<h3>Javascript方案</h3>\r\n\r\n<p>当然也可以用 javascript 来实现类似的行为：</p>\r\n\r\n<pre>\r\n<code>//禁用选择\r\nfunction disableSelection() {  \r\n   document.onselectstart = function() {return false;} // IE 浏览器\r\n   document.onmousedown = function() {return false;} // 其它浏览器\r\n}\r\n//启用选择\r\nfunction enableSelection() {  \r\n   document.onselectstart = null; // IE 浏览器\r\n   document.onmousedown = null; // 其它浏览器\r\n}\r\n</code></pre>\r\n\r\n<p>当然，js方案可以兼容到低版本 IE 浏览器。</p>\r\n\r\n<p>当然对于爬虫和略懂 web 开发的人来说，这些限制完全没有用。</p>\r\n', 'web', '2017-03-16 09:51:22');
INSERT INTO `posts` VALUES ('15', 'Chrome 50发布，有哪些技术更新需要关注？', 'Chrome 50 版本已经发布多日了，不过它带来的很多新特性值得关注，而且有些也是振奋人心的。让我们来一起看一下： ECMAScript/JavaScript: RegExp Unicode 标记 ES6 在正则表达式中使用 u 标记来实现对 Unicode 更友好的功能和行为', '<p>Chrome 50 版本已经发布多日了，不过它带来的很多新特性值得关注，而且有些也是振奋人心的。让我们来一起看一下：</p>\r\n\r\n<h3>ECMAScript/JavaScript:</h3>\r\n\r\n<p>RegExp Unicode 标记</p>\r\n\r\n<p>ES6 在正则表达式中使用&nbsp;<code>u</code>&nbsp;标记来实现对 Unicode 更友好的功能和行为，比如，可以用 emoji 符号之类的。</p>\r\n\r\n<pre>\r\n<code>// Match any symbol from U+1F4A9 PILE OF POO to U+1F4AB DIZZY SYMBOL.\r\nconst regex = /[', 'web', '2017-03-16 09:52:00');

-- ----------------------------
-- Table structure for users
-- ----------------------------
DROP TABLE IF EXISTS `users`;
CREATE TABLE `users` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` char(32) NOT NULL,
  `pass` char(32) NOT NULL,
  `email` varchar(60) NOT NULL,
  `sex` tinyint(4) NOT NULL DEFAULT '0',
  `avatar` varchar(255) DEFAULT NULL,
  `phone` char(11) DEFAULT NULL,
  `company` varchar(60) DEFAULT NULL,
  `homepage` varchar(255) DEFAULT NULL,
  `alt` text,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of users
-- ----------------------------
INSERT INTO `users` VALUES ('1', 'web', 'e10adc3949ba59abbe56e057f20f883e', 'admin@itcast.cn', '0', '/admin/images/monkey.png', '12312345678', '哇哈哈', 'http://www.itcast.cn', '我是谁！');
